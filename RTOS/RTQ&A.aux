\relax 
\providecommand\hyper@newdestlabel[2]{}
\providecommand\babel@aux[2]{}
\@nameuse{bbl@beforestart}
\providecommand\HyperFirstAtBeginDocument{\AtBeginDocument}
\HyperFirstAtBeginDocument{\ifx\hyper@anchor\@undefined
\global\let\oldcontentsline\contentsline
\gdef\contentsline#1#2#3#4{\oldcontentsline{#1}{#2}{#3}}
\global\let\oldnewlabel\newlabel
\gdef\newlabel#1#2{\newlabelxx{#1}#2}
\gdef\newlabelxx#1#2#3#4#5#6{\oldnewlabel{#1}{{#2}{#3}}}
\AtEndDocument{\ifx\hyper@anchor\@undefined
\let\contentsline\oldcontentsline
\let\newlabel\oldnewlabel
\fi}
\fi}
\global\let\hyper@last\relax 
\gdef\HyperFirstAtBeginDocument#1{#1}
\providecommand\HyField@AuxAddToFields[1]{}
\providecommand\HyField@AuxAddToCoFields[2]{}
\babel@aux{english}{}
\@writefile{toc}{\contentsline {section}{\numberline {1}Explain why bounds are not significant when studying applications with sporadic tasks.}{2}{section.1}\protected@file@percent }
\@writefile{toc}{\contentsline {section}{\numberline {2}What does it mean that EDF is "optimal"? Can you show intuitively why that is the case?}{2}{section.2}\protected@file@percent }
\@writefile{toc}{\contentsline {section}{\numberline {3}Consider the real-time task scheduling problem with/without precedence constraints and with/without preemption. What are the easiest and the hardest cases? Why?}{2}{section.3}\protected@file@percent }
\@writefile{toc}{\contentsline {section}{\numberline {4}Consider a generic application composed of periodic and sporadic tasks, to be scheduled using static priorities. Can feasibility be determined using bounds?}{2}{section.4}\protected@file@percent }
\@writefile{toc}{\contentsline {section}{\numberline {5}Discuss optimal versus heuristic scheduling algorithms. When would you use either type of scheduling algorithm?}{2}{section.5}\protected@file@percent }
\@writefile{toc}{\contentsline {section}{\numberline {6}Explain the different types of blocking that can occur when PCP is used to regulate access to resources, and show why such blockings may occur.}{2}{section.6}\protected@file@percent }
\@writefile{toc}{\contentsline {section}{\numberline {7}Briefly present a method for scheduling aperiodic jobs with precedence constraints, assuming that jobs are non-preemptible and they may share resources. Can we say that this a difficult scheduling problem?}{2}{section.7}\protected@file@percent }
\@writefile{toc}{\contentsline {section}{\numberline {8}Compare the non-preemptive (NPP) and highest locker priority (HLP) protocols. Discuss cases when either protocol may be preferred to the other.}{2}{section.8}\protected@file@percent }
\@writefile{toc}{\contentsline {section}{\numberline {9}Discuss blocking time under priority inheritance: in what ways does it differ from that obtained under other resource access protocols?}{2}{section.9}\protected@file@percent }
\@writefile{toc}{\contentsline {section}{\numberline {10}Clock-driven scheduling is a very common method for scheduling periodic tasks. Briefly discuss the main ideas and what are its advantages/disadvantages with respect to priority-driven scheduling.}{2}{section.10}\protected@file@percent }
\@writefile{toc}{\contentsline {section}{\numberline {11}Discuss how precedence relations and the (im)possibility to preempt tasks affect the difficulty of scheduling problems.}{2}{section.11}\protected@file@percent }
\@writefile{toc}{\contentsline {section}{\numberline {12}Explain priority inversion, and why it is a problem in real-time systems.}{2}{section.12}\protected@file@percent }
\@writefile{toc}{\contentsline {section}{\numberline {13}The stack resource policy protocol (SRP) is a way of dealing with priority inversion. Discuss its advantages and disadvantages with respect to other resource access protocols seen.}{2}{section.13}\protected@file@percent }
\@writefile{toc}{\contentsline {section}{\numberline {14}Discuss the analysis you need to perform to understand whether a set of independent periodic tasks is feasible. Consider all cases: static/dynamic priorities, and relative deadlines equal to/less than the periods. Do not enter into details: just outline the general procedure and mention the methods you would use at each step.}{2}{section.14}\protected@file@percent }
\@writefile{toc}{\contentsline {section}{\numberline {15}Discuss what kind of analysis you should perform to understand whether a task set is schedulable under dynamic priorities. Consider two cases: relative deadlines equal to periods, or otherwise.}{2}{section.15}\protected@file@percent }
\@writefile{toc}{\contentsline {section}{\numberline {16}The highest locker priority protocol (HLP) is a way of dealing with priority inversion. Discuss its advantages and disadvantages with respect to other resource access protocols seen.}{2}{section.16}\protected@file@percent }
\@writefile{toc}{\contentsline {section}{\numberline {17}Show why EDF is optimal.}{2}{section.17}\protected@file@percent }
\@writefile{toc}{\contentsline {section}{\numberline {18}Discuss the advantages of SRP (Stack Resource Policy) over HLP (Highest Locker Priority).}{2}{section.18}\protected@file@percent }
\@writefile{toc}{\contentsline {section}{\numberline {19}Illustrate a procedure for scheduling asynchronous tasks with precedence constraints. (You do not need to give all the details: just the main idea). Why should such a procedure be preferred to using a generic scheduling algorithm?}{2}{section.19}\protected@file@percent }
\@writefile{toc}{\contentsline {section}{\numberline {20}Can we always determine feasibility of any given set of purely periodic, independent tasks (no shared resources, deadlines equal to periods) under fixed priorities by simply looking at the processor utilization? Why? Explain the concept of least upper bound and when it can help determine feasibility.}{2}{section.20}\protected@file@percent }
\@writefile{toc}{\contentsline {section}{\numberline {21}Define the scheduling problem in general, and identify some special cases where the problem is tractable.}{2}{section.21}\protected@file@percent }
\@writefile{toc}{\contentsline {section}{\numberline {22}Explain the differences between fixed-priority and dynamic-priority scheduling policies. What are the advantages/disadvantages of one over the other?}{2}{section.22}\protected@file@percent }
\gdef \@abspage@last{2}
